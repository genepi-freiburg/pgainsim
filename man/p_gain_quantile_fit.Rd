% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pgainsim.R
\name{p_gain_quantile_fit}
\alias{p_gain_quantile_fit}
\title{Computation of log-linear fit of the pgain-quantiles (dependent on the number of tests) and evaluation for a determined number of tests}
\usage{
p_gain_quantile_fit(
  pgain_quantile,
  n_data_ff = nrow(pgain_quantile),
  start_vec = data.frame(matrix(rep(c(1, 0.01, 1), times = ncol(pgain_quantile)), ncol
    = ncol(pgain_quantile), dimnames = list(row.names = c("a", "b", "d"), col.names =
    colnames(pgain_quantile)))),
  test_number
)
}
\arguments{
\item{pgain_quantile}{data frame. Columns describe pgain-quantiles for different allele frequenciey (numeric values) and rows discribe number of tests. Output of function p_gain_quantiles.}

\item{n_data_ff}{Integer. Number of quantile datapoints that should be used for the fit. n_data_ff is a divider of the number of available datapoints (default = nrow(pgain_quantile)).}

\item{start_vec}{data frame. Columns describe 3 starting estimates (numeric values) for the log-linear fit for each allele frequency.}

\item{test_number}{Integer. Number of tests for which the p-gain threshold should be determined.}
}
\value{
fits as a list, plots of log-linear fit of the quantiles for every allele frequency, approximated quantile for test_number many tests for every allele frequency. The list contains the log-linear fits for every allele frequency.
}
\description{
Computation of log-linear fit of the pgain-quantiles (dependent on the number of tests) and evaluation for a determined number of tests
}
\examples{
		### beim Testen des Beispiels (aktuell mit eingeschobenem sim_data <- do.call(rbind,sim_data)) wirft er mir beim Fitten noch NaN warnings aus. #### diese Warnings hatte ich immer, sobald die Start-Werte des log-linearen fits nicht mehr ganz so gut waren; auch mit warnings konvergiert der Algorithmus (wenn die Start-Werte nicht ganz schlecht sind) und wir erhalten einen fit (der fit ist sehr ähnlich (wenn der Algorithmus konvergiert ist) auch mit warnings wie wenn man erneut nlsLM mit den durch den ersten fit erhaltenen Start-Werten berechnet); Probleme gibt es, wenn die Basis der log sehr nahe bei 1 ist; das waren bisher meine Beobachtungen durch Ausprobieren, beim Googlen habe ich dazu nichts gefunden. Ich denke, man kann die Warnings reduzieren/beseitigen, wenn man für jede Allelfrequenz einzelne Startwerte festlegt, soll ich das so machen? das wird dann wahrscheinlich etwas unübersichtlich
sim_data <- p_gain_simulation(AFs=c(0.1,0.5),n=10000L,snps_per_trait=1L,n_study=1000L,cores=2L)   # Beispiele müssen self contained sein
pgain_quantile <- p_gain_quantiles(n_tests=50L,sim_data)
fits <- p_gain_quantile_fit(pgain_quantile,n_data_ff=nrow(pgain_quantile),start_vec=data.frame(c(1.09,0.012,1.014),c(1.12,0.014,1.019)),test_number=200L) ##mit diesem start_vec habe ich keine Warnings erhalten, aber das hängt sehr von sim_data ab

}
